# %%
# your_inference_script.py

import tensorflow as tf
import numpy as np
from keras.models import load_model

def make_predictions(input_data):
    # Load the saved model
    model_folder='LSTM_Modell'
    loaded_model = tf.keras.models.load_model(model_folder)

    # Preprocess input_data as needed
    # ...

    # Make predictions using the loaded model
    predictions = loaded_model.predict(input_data)

    # Post-process predictions as needed
    # ...

    # Print or return predictions
    # or return predictions
    return predictions

# %%
input=np.array([[0.24428442, 0.2375882 , 0.68742012, 0.24399164, 0.24399164,
        0.7786009 , 0.20581895, 0.19006481, 1.        , 1.        ,
        1.        ],
       [0.24364148, 0.23444792, 0.6864104 , 0.2433689 , 0.2433689 ,
        0.767688  , 0.20772435, 0.19021291, 1.        , 1.        ,
        1.        ],
       [0.24014286, 0.23014877, 0.68530883, 0.23985424, 0.23985424,
        0.70626875, 0.2090898 , 0.19027658, 1.        , 1.        ,
        1.        ],
       [0.24060844, 0.23523201, 0.6843731 , 0.24033877, 0.24033877,
        0.71148967, 0.21037463, 0.19035023, 1.        , 1.        ,
        1.        ],
       [0.2361947 , 0.22897976, 0.68348838, 0.23589084, 0.23589084,
        0.63444433, 0.21108341, 0.1903193 , 1.        , 1.        ,
        1.        ],
       [0.23311032, 0.22594786, 0.68326956, 0.2328098 , 0.2328098 ,
        0.58468497, 0.21141043, 0.19021756, 1.        , 1.        ,
        1.        ],
       [0.23588574, 0.22785126, 0.68313189, 0.23513886, 0.23513886,
        0.61560551, 0.21194386, 0.19017183, 1.        , 1.        ,
        1.        ],
       [0.23741206, 0.22897976, 0.68499941, 0.23759008, 0.23759008,
        0.64743929, 0.21267651, 0.19018383, 1.        , 1.        ,
        1.        ],
       [0.24399207, 0.23699854, 0.68700735, 0.24379693, 0.24379693,
        0.72066414, 0.21397247, 0.19033948, 1.        , 1.        ,
        1.        ],
       [0.24428442, 0.23660556, 0.68681097, 0.24420574, 0.24420574,
        0.72522138, 0.21518671, 0.19050154, 1.        , 1.        ,
        1.        ],
       [0.24637247, 0.23701036, 0.68755212, 0.24568714, 0.24568714,
        0.74226195, 0.2164364 , 0.19069472, 1.        , 1.        ,
        1.        ],
       [0.23992948, 0.23103222, 0.68244418, 0.23973804, 0.23973804,
        0.62931067, 0.21696028, 0.19074617, 1.        , 1.        ,
        1.        ],
       [0.23149551, 0.22412601, 0.6826301 , 0.23123515, 0.23123515,
        0.49822555, 0.21656698, 0.19059946, 1.        , 1.        ,
        1.        ],
       [0.23090056, 0.22354535, 0.68068615, 0.23064057, 0.23064057,
        0.48993423, 0.21615049, 0.19044188, 1.        , 1.        ,
        1.        ],
       [0.22525694, 0.21516922, 0.67935159, 0.22270856, 0.22270856,
        0.38845494, 0.21496462, 0.19010353, 0.        , 0.        ,
        1.        ],
       [0.22340934, 0.21603205, 0.6793131 , 0.22313808, 0.22313808,
        0.39555114, 0.21393549, 0.18978184, 0.        , 1.        ,
        1.        ],
       [0.22529502, 0.21564844, 0.67843255, 0.22517414, 0.22517414,
        0.42996205, 0.21321206, 0.18951372, 0.        , 1.        ,
        1.        ],
       [0.22173647, 0.21239511, 0.67824876, 0.22156175, 0.22156175,
        0.38334712, 0.21218906, 0.18916716, 0.        , 1.        ,
        0.        ],
       [0.22120499, 0.21197494, 0.6775701 , 0.22169454, 0.22169454,
        0.38577657, 0.21127703, 0.18883054, 0.        , 1.        ,
        0.        ],
       [0.22342838, 0.21795232, 0.67918488, 0.22283389, 0.22283389,
        0.40752505, 0.21056808, 0.188527  , 0.        , 1.        ,
        0.        ],
       [0.22829427, 0.22348348, 0.6817416 , 0.22824717, 0.22824717,
        0.50401333, 0.21047879, 0.18835497, 0.        , 1.        ,
        0.        ],
       [0.23114996, 0.22257846, 0.68241986, 0.23094737, 0.23094737,
        0.54754509, 0.21067343, 0.18824895, 0.        , 1.        ,
        0.        ],
       [0.2324181 , 0.22219205, 0.68171736, 0.23214323, 0.23214323,
        0.56658991, 0.2109715 , 0.18817275, 0.        , 1.        ,
        0.        ],
       [0.23220659, 0.224339  , 0.68238751, 0.23196456, 0.23196456,
        0.56325893, 0.21122296, 0.18809392, 0.        , 1.        ,
        0.        ],
       [0.23011387, 0.22153546, 0.68006724, 0.2299313 , 0.2299313 ,
        0.52468993, 0.21124308, 0.18796951, 0.        , 0.        ,
        0.        ],
       [0.22361861, 0.21449875, 0.67858454, 0.22315692, 0.22315692,
        0.41211644, 0.21057031, 0.18769051, 0.        , 0.        ,
        0.        ],
       [0.22171762, 0.21335075, 0.6787045 , 0.2218844 , 0.2218844 ,
        0.39322906, 0.20983182, 0.18738753, 0.        , 0.        ,
        0.        ],
       [0.22329509, 0.21264334, 0.67773768, 0.22315692, 0.22315692,
        0.41969937, 0.20929345, 0.18712006, 0.        , 0.        ,
        0.        ],
       [0.22078756, 0.21220405, 0.67828071, 0.22038622, 0.22038622,
        0.3762833 , 0.20852375, 0.18679365, 0.        , 0.        ,
        0.        ],
       [0.22160374, 0.21336987, 0.67704407, 0.22146701, 0.22146701,
        0.40027016, 0.2079376 , 0.18649875, 0.        , 1.        ,
        0.        ]])

predictions=make_predictions(input)
print(predictions)


# %%
